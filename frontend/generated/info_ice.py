# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `info.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module SmartHome
_M_SmartHome = Ice.openModule('generated.SmartHome')
__name__ = 'SmartHome'

if '_t_DeviceIds' not in _M_SmartHome.__dict__:
    _M_SmartHome._t_DeviceIds = IcePy.defineSequence('::SmartHome::DeviceIds', (), IcePy._t_string)

_M_SmartHome._t_DeviceInfo = IcePy.defineValue('::SmartHome::DeviceInfo', Ice.Value, -1, (), False, True, None, ())

if 'DeviceInfoPrx' not in _M_SmartHome.__dict__:
    _M_SmartHome.DeviceInfoPrx = Ice.createTempClass()
    class DeviceInfoPrx(Ice.ObjectPrx):

        def setDevices(self, context=None):
            return _M_SmartHome.DeviceInfo._op_setDevices.invoke(self, ((), context))

        def setDevicesAsync(self, context=None):
            return _M_SmartHome.DeviceInfo._op_setDevices.invokeAsync(self, ((), context))

        def begin_setDevices(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_SmartHome.DeviceInfo._op_setDevices.begin(self, ((), _response, _ex, _sent, context))

        def end_setDevices(self, _r):
            return _M_SmartHome.DeviceInfo._op_setDevices.end(self, _r)

        def getDevices(self, context=None):
            return _M_SmartHome.DeviceInfo._op_getDevices.invoke(self, ((), context))

        def getDevicesAsync(self, context=None):
            return _M_SmartHome.DeviceInfo._op_getDevices.invokeAsync(self, ((), context))

        def begin_getDevices(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_SmartHome.DeviceInfo._op_getDevices.begin(self, ((), _response, _ex, _sent, context))

        def end_getDevices(self, _r):
            return _M_SmartHome.DeviceInfo._op_getDevices.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_SmartHome.DeviceInfoPrx.ice_checkedCast(proxy, '::SmartHome::DeviceInfo', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_SmartHome.DeviceInfoPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::SmartHome::DeviceInfo'
    _M_SmartHome._t_DeviceInfoPrx = IcePy.defineProxy('::SmartHome::DeviceInfo', DeviceInfoPrx)

    _M_SmartHome.DeviceInfoPrx = DeviceInfoPrx
    del DeviceInfoPrx

    _M_SmartHome.DeviceInfo = Ice.createTempClass()
    class DeviceInfo(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::SmartHome::DeviceInfo')

        def ice_id(self, current=None):
            return '::SmartHome::DeviceInfo'

        @staticmethod
        def ice_staticId():
            return '::SmartHome::DeviceInfo'

        def setDevices(self, current=None):
            raise NotImplementedError("servant method 'setDevices' not implemented")

        def getDevices(self, current=None):
            raise NotImplementedError("servant method 'getDevices' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_SmartHome._t_DeviceInfoDisp)

        __repr__ = __str__

    _M_SmartHome._t_DeviceInfoDisp = IcePy.defineClass('::SmartHome::DeviceInfo', DeviceInfo, (), None, ())
    DeviceInfo._ice_type = _M_SmartHome._t_DeviceInfoDisp

    DeviceInfo._op_setDevices = IcePy.Operation('setDevices', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), None, ())
    DeviceInfo._op_getDevices = IcePy.Operation('getDevices', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), _M_SmartHome._t_DeviceIds, False, 0), ())

    _M_SmartHome.DeviceInfo = DeviceInfo
    del DeviceInfo

# End of module SmartHome
